const moderationSchema = require("../schemas/moderation"); 
const mConfig = require("../messageConfig.json");
const { PermissionFlagsBits, EmbedBuilder } = require("discord.js");

// –∫–Ω–æ–ø–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞–º–∏
module.exports = {
  customId: "nickBtn",
  userPermissions: [PermissionFlagsBits.ManageNicknames],
  botPermissions: [PermissionFlagsBits.ManageNicknames],

  run: async (client, interaction) => {
    const { message, channel, guildId, guild, user } = interaction;

    const embedAuthor = message.embeds[0].author;
    const guildMembers = await guild.members
      .fetch({
        query: embedAuthor.name,
        limit: 1,
      })
      const targetMember=guildMembers.first();

    const tagline = Math.floor(Math.random() * 1000) + 1;

    const rEmbed = new EmbedBuilder()
      .setColor("White")
      .setFooter({ text: `${client.user.uesrname}- Moderate user `})
      .setAuthor({
        name: `${targetMember.user.username}`,
        iconURL: `${targetMember.user.displayAvatarURL({ dynamic: true })}`,
      })
      .setDescription(`\`‚ùî\`Whats is the reason to moderate the nickname of ${targetMember.user.username}?
        \`‚ùï\` You have 15 seconds to reply. After this time the moderation will be automatically canceled.\n\n\`üí°\` To continue without a reason, answer with \-\`
        \`üí°\` To cancel the moderation action, answer with \cancel\`
        .`);

    message.edit({ embeds: [rEmbed], components: [] });

    const filter = (m) => m.author.id === user.id;
    const reasonCollector = await channel
      .awaitMessages({ filter, max: 1, time: 15_000, errors: ["time"] })
      .then((reason) => {
        // –µ—Å–ª–∏ –æ—Ç–º–µ–Ω–∞, —Ç–æ –Ω–µ –º–µ–Ω—è–µ–º –Ω–∏–∫
        if (reason.first().content.toLowerCase() === "cancel") {
          reason.first().delete();

          rEmbed
            .setColor(`${mConfig.embedColorError}`)
            .setColor(`\`‚ùå\` Moderation action canceled.`);

          // —Å–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∏–∫–∞ –ø—Ä–µ–∂–¥–µ —á–µ–º —É–¥–∞–ª–∏—Ç—Å—è
          message.edit({ embeds: [rEmbed] });
          setTimeout(() => {message.delete()}, 2000);
          return;
        }
        return reason;
      }).catch(()=>{
        rEmbed
            .setColor(mConfig.embedColorError)
            .setDescription(`\`‚ùå\` Moderation action expired.`);

          // —Å–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∏–∫–∞ –ø—Ä–µ–∂–¥–µ —á–µ–º —É–¥–∞–ª–∏—Ç—Å—è
          message.edit({ embeds: [rEmbed] });
          setTimeout(() => {message.delete()}, 2000);
          return;
      });

      // —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –ø—Ä–∏—á–∏–Ω—ã
      const reasonObj=reasonCollector?.first();

      if(!reasonObj) return;

      let reason =reasonObj.content;

      // –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫ –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –ø—Ä–∏—á–∏–Ω—ã
      if(reasonObj.content === '-') reason="No reason specifed";

      // –Ω–∞—Ö–æ–¥–∏–º –∏–∑ –±–¥
      let dataGD =await moderationSchema.findOne({GuildID: guildId})
      if(!dataGD) return;

      // —Å–º–µ–Ω–∞ –Ω–∏–∫–∞
      await targetMember.setNickname(`Moderated Nickname ${tagline}`);

      // –ø—Ä–æ–≤–µ—Ä–∏–º —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω
      const {LogChannelID}=dataGD;
      const loggingChannel=guild.channels.cache.get(LogChannelID)

      
      const lEmbed=new EmbedBuilder()
        .setColor("White")
        .setTitle("‚ùï Moderated Nickname")
        .setAuthor({
          name: `${targetMember.user.username}`,
          iconURL: `${targetMember.user.displayAvatarURL({ dynamic: true })}`,
        })
        .setDescription(`\`üí°\` I moderated the users nickname - Moderate Nickname`)
        .addFields(
          {name: "Changed by", value: `<@${user.id}>`, inline: true},
          {name: "Reason", value: `${reason}`, inline: true})
        .setFooter({iconURL:`${client.user.displayAvatarURL({dynamic:true})}`,
          text: `${client.user.username}- Logging system.`});
          
          loggingChannel.send({embeds: [lEmbed]})


          // –ø–∏—à–µ–º —á—Ç–æ –Ω–∏–∫ –∏–∑–º–µ–Ω–µ–Ω
          rEmbed.setColor(`${mConfig.embedColorSucces}`).setDescription(`\`‚úî\`Successfully moderated the users name to ${targetMember.user.username}`);

          message.edit({embeds: [rEmbed]});
          setTimeout(() => {message.delete()}, 2000);

  },
};